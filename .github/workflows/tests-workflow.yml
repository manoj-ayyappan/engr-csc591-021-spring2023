# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  hw-tests:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    strategy:
      matrix:
        # Modify hw-out with the name of the .out file in the correct order
        # script is for hw1, data for 2, cluster for 3...
        hw-out: [script, data, cluster, grid, bins, xpln, stats]
        
    env:
      NUM: ${{ strategy.job-index }} 
      
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Get HW Name
      run: |
        echo "HW-NAME=HW$(($NUM+1))" >> $GITHUB_ENV
        #if [ "${{matrix.hw-out}}" == "project" ]; 
        #then echo "HW-NAME=Project" >> $GITHUB_ENV; 
        #else echo "HW-NAME=HW$(($NUM+1))" >> $GITHUB_ENV; fi
        
        
    - name: Check if exists
      run: |
        echo "src/${{ env.HW-NAME }}"
        echo "HW-EXISTS=$(if [ -d "src/${{ env.HW-NAME }}" ]; then echo true; else echo false; fi)" >> $GITHUB_ENV
    
    - name: Display Variables
      run: | 
        echo Name: ${{ env.HW-NAME }}
        echo Exists: ${{ env.HW-EXISTS }}
        
    - name: Run ${{ env.HW-NAME }} Tests
      if: ${{ env.HW-EXISTS == 'true' }}
      run: |
        python test/test_hw.py "${{ env.HW-NAME }}" > out/${{matrix.hw-out}}.out
        cat out/${{matrix.hw-out}}.out
      
    - uses: actions/checkout@v3
      with:
        clean: false
    - name: Save .out files
      if: always()
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Save *.out files
        file_pattern: '*.out'
        
  project-tests:
      runs-on: ubuntu-latest

      permissions:
        contents: write

      strategy:
        matrix:
          # Modify project-out with the name of the .out file in the correct order
          proj-out: [project1, project2]
          
      env:
        NUM: ${{ strategy.job-index }} 

      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get Project Name
        run: |
          echo "PROJ-NAME=Project$(($NUM+1))" >> $GITHUB_ENV

      - name: Check if exists
        run: |
          echo "src/${{ env.PROJ-NAME }}"
          echo "PROJ-EXISTS=$(if [ -d "src/${{ env.PROJ-NAME }}" ]; then echo true; else echo false; fi)" >> $GITHUB_ENV

      - name: Display Variables
        run: | 
          echo Name: ${{ env.PROJ-NAME }}
          echo Exists: ${{ env.PROJ-EXISTS }}

      - name: Run ${{ env.PROJ-NAME }} Tests
        if: ${{ env.PROJ-EXISTS == 'true' }}
        run: |
          python test/test_hw.py "${{ env.PROJ-NAME }}" > out/${{matrix.proj-out}}.out
          cat out/${{matrix.proj-out}}.out

      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Save .out files
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Save *.out files
          file_pattern: '*.out'

  project-all:
      runs-on: ubuntu-latest

      permissions:
        contents: write

      strategy:
        matrix:
          # Modify project-out with the name of the .out file in the correct order
          dataset: [HPO, SSM, SSN, auto2, auto93, china, coc1000, coc10000, healthCloseIsses12mths0001-hard, healthCloseIsses12mths0011-easy, nasa93dem, pom]
          
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get Project Name
        run: |
          echo "PROJ-NAME=Project2" >> $GITHUB_ENV
          echo "DATA-NAME=${{matrix.dataset}}.csv" >> $GITHUB_ENV

      - name: Check if exists
        run: |
          echo "src/${{ env.PROJ-NAME }}"
          echo "data/${{ env.DATA-NAME }}"
          echo "PROJ-EXISTS=$(if [ -d "src/${{ env.PROJ-NAME }}" ]; then echo true; else echo false; fi)" >> $GITHUB_ENV
          echo "DATA-EXISTS=$(if [ -f "data/${{ env.DATA-NAME }}" ]; then echo true; else echo false; fi)" >> $GITHUB_ENV

      - name: Display Variables
        run: | 
          echo Name: ${{ env.PROJ-NAME }}
          echo Exists: ${{ env.PROJ-EXISTS }}
          echo Name: ${{ env.DATA-NAME }}
          echo Exists: ${{ env.DATA-EXISTS }}

      - name: Run ${{ env.PROJ-NAME }} on ${{ env.DATA-NAME }}
        if: ${{ (env.PROJ-EXISTS == 'true') && (env.DATA-EXISTS == 'true')}}
        run: |
          python test/test_hw.py "${{ env.PROJ-NAME }}" -f "data/${{ env.DATA-NAME }}"> out/project2-${{matrix.dataset}}.out
          cat out/project2-${{matrix.dataset}}.out

      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Save .out files
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Save *.out files
          file_pattern: '*.out'
